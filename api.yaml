openapi: 3.0.3
info:
  title: filpkart api swagger
  description: |-
    This is a sample flipkart api swagger Store
  termsOfService: http://swagger.io/terms/
  contact:
    email: brgawande@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:4000/

paths:
  /register:
    post:
      tags:
        - Users
      summary: Register user with name email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string

      responses:
        "201":
          description: User Registered Successfully
        "400":
          description: Invalid ID supplied
        "404":
          description: Internal Server Error
        "405":
          description: Validation exception

  # Login
  /login:
    post:
      tags:
        - Users
      summary: Login user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: User LoggedIn Successfully
        "400":
          description: Invalid ID supplied
        "404":
          description: Internal Server Error
        "405":
          description: Validation exception

  # logout
  /logout:
    get:
      tags:
        - Users
      summary: LoggedOut User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User LoggedOut Successfully
        "400":
          description: Invalid ID supplied
        "404":
          description: Internal Server Error
        "405":
          description: Validation exception

  /addproduct:
    post:
      tags:
        - Products
      summary: Create a New Products
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The Title Of Product
                description:
                  type: string
                  description: The Description Of Product
                price:
                  type: number
                  description: The Price Of Product
                category:
                  type: string
                  description: The category Of Product
                subcategory:
                  type: string
                  description: The subcategory Of Product
                file:
                  type: string
                  format: binary
                  description: The image file Of Product
      responses:
        "200":
          description: Product Added Succesfully
        "404":
          description: Please Enter All The Fields

  # get all products

  /getallproducts:
    get:
      tags:
        - Products
      summary: Get all Products
      responses:
        "200":
          description: Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"

  /getsingleproducts/{id}:
    get:
      tags:
        - Products
      summary: Get Single Product Info By Id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to retrieve
      responses:
        "200":
          description: Successfull
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: "#/components/schemas/Product"
        "404":
          description: Product Not Found

  /deletesingleproducts/{id}:
    delete:
      tags:
        - Products
      summary: Delete Single Product By Id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to delete
      responses:
        "200":
          description: Product Deleted Successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                message:
                  type: string
        "404":
          description: Product Not found

  /updatesingleproducts/{id}:
    put:
      tags:
        - Products
      summary: Update Product Through Product Id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to update
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The Title Of Product
                description:
                  type: string
                  description: The Description Of Product
                price:
                  type: number
                  description: The Price Of Product
                category:
                  type: string
                  description: The category Of Product
                subcategory:
                  type: string
                  description: The subcategory Of Product
                file:
                  type: string
                  format: binary
                  description: The image file Of Product
      responses:
        "200":
          description: Product Updated Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "404":
          description: Product Not Found
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: string
        category:
          type: string
        subcategory:
          type: string
